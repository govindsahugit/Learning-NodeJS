const input = document.getElementById("input");
// Targeting the file input.

const decoder = new TextDecoder();
// Instance of TextDecoder.

input.addEventListener("change", async () => {
  const file = input.files[0]; // Extracting file object.
  const readStream = file.stream(); // File Object has a stream Method
  const reader = readStream.getReader();

  while (true) {
    const { data, value } = await reader.read();
    // Return data value as true if the data is fully read, else false. So we can run the stream again for remaining data.
    // The size of buffer is decided by the browser only. (Uint8Array)
    if (data) break;
    console.log(decoder.decode(value));
    // Decodes the data.
  }


  // for-of loop syntax for readstrems
  for await (const chunk of readStream) {
    console.log(chunk)
  }

});


// When we use fetch, response.body is a readable stream. So we can use for-await loop for reading chunks data